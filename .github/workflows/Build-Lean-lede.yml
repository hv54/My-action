#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#
name: OpenWrt
on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/Build-Lean-lede.yml'
  schedule:
      - cron: 0 0/12 * * *

jobs:

  build_openwrt:

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id

    steps:    
      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php* android*
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig libtinfo5
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
          sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
          df -h 
      - name: Checkout               
        uses: actions/checkout@v2
        with:
          repository: coolsnowwolf/lede   
          
      - name: Download and Load custom configuration
        run: |
          sed -i 's?coolsnowwolf/packages?xiaoqingfengATGH/feeds-packages?' ./feeds.conf.default
          sed -i 's?coolsnowwolf/luci?xiaoqingfengATGH/feeds-luci?' ./feeds.conf.default
          sed -i 's?git.openwrt.org/feed/routing.git?github.com/xiaoqingfengATGH/k5-feeds-routing?' ./feeds.conf.default
          sed -i 's?git.openwrt.org/feed/telephony.git?github.com/xiaoqingfengATGH/k5-feeds-telephony?' ./feeds.conf.default
          sed -i 's?github.com/xiaoqingfengATGH/k5-feeds-telephony?git.openwrt.org/feed/telephony.git?' ./feeds.conf.default
          echo "src-git xiaoqingfeng https://github.com/xiaoqingfengATGH/feeds-xiaoqingfeng" >> feeds.conf.default
          echo "src-git pw https://github.com/homelede/openwrt-passwall.git" >> feeds.conf.default
          echo "src-git lienol https://github.com/homelede/openwrt-package.git" >> feeds.conf.default
          echo "src-git infinityfreedom https://github.com/xiaoqingfengATGH/luci-theme-infinityfreedom.git" >> feeds.conf.default
          echo "src-git homeclash https://github.com/xiaoqingfengATGH/homeclash.git" >> feeds.conf.default
          echo "src-git strongswanInDocker https://github.com/xiaoqingfengATGH/luci-app-strongswanInDocker.git" >> feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a          
          curl -fsSL https://raw.githubusercontent.com/hv54/My-action/master/lean-lede/x86_64/.config >.config
          make defconfig
      
      - name: Make download package
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h
      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true
      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/
      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
